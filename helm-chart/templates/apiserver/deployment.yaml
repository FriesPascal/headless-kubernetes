apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headless-kubernetes.fullname" . }}-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: apiserver
    {{- include "headless-kubernetes.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook-weight: "2"
spec:
  replicas: {{ .Values.apiserver.replicas }}
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: apiserver
      {{- include "headless-kubernetes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        {{- include "headless-kubernetes.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: apiserver
          {{- if .Values.apiserver.endpointReconciliationEnabled }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
          {{- end }}
          image: {{ .Values.apiserver.image.repository }}:{{ .Values.apiserver.image.tag | default (printf "v%s" .Values.cluster.version) }}
          imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
          command:
            - kube-apiserver
            {{- if .Values.apiserver.endpointReconciliationEnabled }}
            - --advertise-address=$(HOST_IP)
            {{- end }}
            - --allow-privileged=true
            - --authorization-mode=Node,RBAC
            - --bind-address=0.0.0.0
            - --client-ca-file=/etc/kubernetes/kubelet-client-auth/ca.crt
            - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
            - --endpoint-reconciler-type={{ ternary "lease" "none" .Values.apiserver.endpointReconciliationEnabled }}
            - --etcd-cafile=/etc/kubernetes/etcd-client-auth/ca.crt
            - --etcd-certfile=/etc/kubernetes/etcd-client-auth/tls.crt
            - --etcd-keyfile=/etc/kubernetes/etcd-client-auth/tls.key
            - --etcd-servers=https://{{ include "headless-kubernetes.fullname" . }}-etcd:2379
            - --event-ttl={{ .Values.apiserver.eventTtl }}
            {{- if .Values.apiserver.encryptionAtRest.enabled }}
            - --encryption-provider-config=/etc/kubernetes/encryption/config.yaml
            - --encryption-provider-config-automatic-reload=true
            {{- end }}
            - --kubelet-certificate-authority=/etc/kubernetes/kubelet-client-auth/ca.crt
            - --kubelet-client-certificate=/etc/kubernetes/kubelet-client-auth/tls.crt
            - --kubelet-client-key=/etc/kubernetes/kubelet-client-auth/tls.key
            - --kubelet-preferred-address-types=InternalIP
            - --runtime-config=api/all=true
            - --secure-port={{ ternary .Values.apiserver.nodePort "6443" .Values.apiserver.endpointReconciliationEnabled }}
            - --service-account-key-file=/etc/kubernetes/signing/tls.crt
            - --service-account-signing-key-file=/etc/kubernetes/signing/tls.key
            - --service-account-issuer=https://{{ include "headless-kubernetes.fullname" . }}-apiserver:443
            - --service-cluster-ip-range={{ .Values.cluster.clusterIpServiceCidr }}
            - --service-node-port-range={{ .Values.cluster.nodePortRange }}
            - --tls-cert-file=/etc/kubernetes/server-auth/tls.crt
            - --tls-private-key-file=/etc/kubernetes/server-auth/tls.key
            - --v=2
          ports:
            - name: https
              containerPort: {{ ternary .Values.apiserver.nodePort "6443" .Values.apiserver.endpointReconciliationEnabled }} 
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop: [ALL]
              add: [NET_BIND_SERVICE]
          volumeMounts:
            {{- if .Values.apiserver.encryptionAtRest.enabled }}
            - name: encryption-config
              mountPath: /etc/kubernetes/encryption/config.yaml
              subPath: {{ ternary "config.yaml" .Values.apiserver.encryptionAtRest.existingSecretKey .Values.apiserver.encryptionAtRest.generateSecret }} 
            {{- end }}
            - name: etcd-client-auth
              mountPath: /etc/kubernetes/etcd-client-auth
            - name: kubelet-client-auth
              mountPath: /etc/kubernetes/kubelet-client-auth
            - name: server-auth
              mountPath: /etc/kubernetes/server-auth
            - name: signing-keys
              mountPath: /etc/kubernetes/signing
      restartPolicy: Always
      volumes:
        {{- if .Values.apiserver.encryptionAtRest.enabled }}
        - name: encryption-config
          secret:
            secretName: {{ ternary (printf "%s-encryption-config" (include "headless-kubernetes.fullname" . )) .Values.apiserver.encryptionAtRest.existingSecretName .Values.apiserver.encryptionAtRest.generateSecret }} 
        {{- end }}
        - name: etcd-client-auth
          secret:
            secretName: {{ include "headless-kubernetes.fullname" . }}-apiserver-etcd-client-auth
        - name: kubelet-client-auth
          secret:
            secretName: {{ include "headless-kubernetes.fullname" . }}-apiserver-kubelet-client-auth
        - name: server-auth
          secret:
            secretName: {{ include "headless-kubernetes.fullname" . }}-apiserver
        - name: signing-keys
          secret:
            secretName: {{ include "headless-kubernetes.fullname" . }}-signing-keys
